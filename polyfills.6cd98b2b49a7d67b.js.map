{"version":3,"file":"polyfills.6cd98b2b49a7d67b.js","mappings":"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rD,EAAQ1F,EAAMsc,EAAM1T,EACnD,EACAoI,EAAIpF,sBAAsBlG,EAAOyW,GAASE,EAC9C,CASA,MAwGMI,GAAmB,CACrB,4BACA,aACA,aACA,eACA,sBACA,cACA,eACA,cACA,eACA,oBACA,4BACA,kBACA,aACA,iBACA,UACA,iBACA,UACA,SACA,QACA,WACA,WACA,WACA,mBACA,UACA,qBACA,SACA,gBACA,qBACA,wBACA,0BAOEC,GAAyB,CAAC,YAAa,gBAAiB,YAAa,oBAAqB,mBA6D1FC,EAAkB,CAAC,QACnBC,EAAqB,CAAC,OAAQ,QAAS,QAAS,OAAQ,SAAU,SAAU,gBAC5EC,EAAoB,CAAC,SAAU,SAAU,SACzCC,GAA2B,CAC7B,YAAa,WAAY,QAAS,QAAS,OAAQ,WAAY,UAAW,UAC1E,oBAEEC,EAAqB,CAAC,gBAAiB,WAAY,QAAS,UAAW,QAAS,UAAW,gBAAiB,SAC5GC,EAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,GAAmB,CAAC,QAAS,WAC7BC,GApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6ClB,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA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","names":["BLOCK_MARKER$1","MissingTranslationError","Error","constructor","parsedMessage","super","describeMessage","this","type","$localize$1","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","BLOCK_MARKER","messagePart","rawMessagePart","charAt","substring","findEndOfBlock","cooked","cookedIndex","rawIndex","globalThis","global","window","self","WorkerGlobalScope","ɵ_global","ɵ$localize","performance","mark","name","performanceMeasure","label","measure","symbolPrefix","__Zone_symbol_prefix","__symbol__","checkDuplicate","Zone","parent","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","static","Promise","patches","ZoneAwarePromise","root","zone","current","_currentZoneFrame","currentTask","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","writable","set","isWebWorker","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","once","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","readableObjectToString","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","Symbol","species","C","catch","finally","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","isExisting","capture","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","buildEventListenerOptions","assign","constructorName","targetSource","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","propertyDescriptorPatch","supportsWebSocket","WebSocket","__Zone_ignore_on_properties","ignoreErrorProperties","isIE","Document","SVGElement","Element","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","patchCustomElements","customElements","patchXHR","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","findPendingTask","geolocation","patchPrototype","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/localize/fesm2020/localize.mjs","./node_modules/@angular/localize/fesm2020/init.mjs","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["/**\n * @license Angular v15.2.8\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * The character used to mark the start and end of a \"block\" in a `$localize` tagged string.\n * A block can indicate metadata about the message or specify a name of a placeholder for a\n * substitution expressions.\n *\n * For example:\n *\n * ```ts\n * $localize`Hello, ${title}:title:!`;\n * $localize`:meaning|description@@id:source message text`;\n * ```\n */\nconst BLOCK_MARKER$1 = ':';\n/**\n * The marker used to separate a message's \"meaning\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:correct|Indicates that the user got the answer correct: Right!`;\n * $localize `:movement|Button label for moving to the right: Right!`;\n * ```\n */\nconst MEANING_SEPARATOR = '|';\n/**\n * The marker used to separate a message's custom \"id\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:A welcome message on the home page@@myApp-homepage-welcome: Welcome!`;\n * ```\n */\nconst ID_SEPARATOR = '@@';\n/**\n * The marker used to separate legacy message ids from the rest of a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:@@custom-id␟2df64767cd895a8fabe3e18b94b5b6b6f9e2e3f0: Welcome!`;\n * ```\n *\n * Note that this character is the \"symbol for the unit separator\" (␟) not the \"unit separator\n * character\" itself, since that has no visual representation. See https://graphemica.com/%E2%90%9F.\n *\n * Here is some background for the original \"unit separator character\":\n * https://stackoverflow.com/questions/8695118/whats-the-file-group-record-unit-separator-control-characters-and-its-usage\n */\nconst LEGACY_ID_INDICATOR = '\\u241F';\n\n/**\n * Represents a big integer using a buffer of its individual digits, with the least significant\n * digit stored at the beginning of the array (little endian).\n *\n * For performance reasons, each instance is mutable. The addition operation can be done in-place\n * to reduce memory pressure of allocation for the digits array.\n */\nclass BigInteger {\n    static zero() {\n        return new BigInteger([0]);\n    }\n    static one() {\n        return new BigInteger([1]);\n    }\n    /**\n     * Creates a big integer using its individual digits in little endian storage.\n     */\n    constructor(digits) {\n        this.digits = digits;\n    }\n    /**\n     * Creates a clone of this instance.\n     */\n    clone() {\n        return new BigInteger(this.digits.slice());\n    }\n    /**\n     * Returns a new big integer with the sum of `this` and `other` as its value. This does not mutate\n     * `this` but instead returns a new instance, unlike `addToSelf`.\n     */\n    add(other) {\n        const result = this.clone();\n        result.addToSelf(other);\n        return result;\n    }\n    /**\n     * Adds `other` to the instance itself, thereby mutating its value.\n     */\n    addToSelf(other) {\n        const maxNrOfDigits = Math.max(this.digits.length, other.digits.length);\n        let carry = 0;\n        for (let i = 0; i < maxNrOfDigits; i++) {\n            let digitSum = carry;\n            if (i < this.digits.length) {\n                digitSum += this.digits[i];\n            }\n            if (i < other.digits.length) {\n                digitSum += other.digits[i];\n            }\n            if (digitSum >= 10) {\n                this.digits[i] = digitSum - 10;\n                carry = 1;\n            }\n            else {\n                this.digits[i] = digitSum;\n                carry = 0;\n            }\n        }\n        // Apply a remaining carry if needed.\n        if (carry > 0) {\n            this.digits[maxNrOfDigits] = 1;\n        }\n    }\n    /**\n     * Builds the decimal string representation of the big integer. As this is stored in\n     * little endian, the digits are concatenated in reverse order.\n     */\n    toString() {\n        let res = '';\n        for (let i = this.digits.length - 1; i >= 0; i--) {\n            res += this.digits[i];\n        }\n        return res;\n    }\n}\n/**\n * Represents a big integer which is optimized for multiplication operations, as its power-of-twos\n * are memoized. See `multiplyBy()` for details on the multiplication algorithm.\n */\nclass BigIntForMultiplication {\n    constructor(value) {\n        this.powerOfTwos = [value];\n    }\n    /**\n     * Returns the big integer itself.\n     */\n    getValue() {\n        return this.powerOfTwos[0];\n    }\n    /**\n     * Computes the value for `num * b`, where `num` is a JS number and `b` is a big integer. The\n     * value for `b` is represented by a storage model that is optimized for this computation.\n     *\n     * This operation is implemented in N(log2(num)) by continuous halving of the number, where the\n     * least-significant bit (LSB) is tested in each iteration. If the bit is set, the bit's index is\n     * used as exponent into the power-of-two multiplication of `b`.\n     *\n     * As an example, consider the multiplication num=42, b=1337. In binary 42 is 0b00101010 and the\n     * algorithm unrolls into the following iterations:\n     *\n     *  Iteration | num        | LSB  | b * 2^iter | Add? | product\n     * -----------|------------|------|------------|------|--------\n     *  0         | 0b00101010 | 0    | 1337       | No   | 0\n     *  1         | 0b00010101 | 1    | 2674       | Yes  | 2674\n     *  2         | 0b00001010 | 0    | 5348       | No   | 2674\n     *  3         | 0b00000101 | 1    | 10696      | Yes  | 13370\n     *  4         | 0b00000010 | 0    | 21392      | No   | 13370\n     *  5         | 0b00000001 | 1    | 42784      | Yes  | 56154\n     *  6         | 0b00000000 | 0    | 85568      | No   | 56154\n     *\n     * The computed product of 56154 is indeed the correct result.\n     *\n     * The `BigIntForMultiplication` representation for a big integer provides memoized access to the\n     * power-of-two values to reduce the workload in computing those values.\n     */\n    multiplyBy(num) {\n        const product = BigInteger.zero();\n        this.multiplyByAndAddTo(num, product);\n        return product;\n    }\n    /**\n     * See `multiplyBy()` for details. This function allows for the computed product to be added\n     * directly to the provided result big integer.\n     */\n    multiplyByAndAddTo(num, result) {\n        for (let exponent = 0; num !== 0; num = num >>> 1, exponent++) {\n            if (num & 1) {\n                const value = this.getMultipliedByPowerOfTwo(exponent);\n                result.addToSelf(value);\n            }\n        }\n    }\n    /**\n     * Computes and memoizes the big integer value for `this.number * 2^exponent`.\n     */\n    getMultipliedByPowerOfTwo(exponent) {\n        // Compute the powers up until the requested exponent, where each value is computed from its\n        // predecessor. This is simple as `this.number * 2^(exponent - 1)` only has to be doubled (i.e.\n        // added to itself) to reach `this.number * 2^exponent`.\n        for (let i = this.powerOfTwos.length; i <= exponent; i++) {\n            const previousPower = this.powerOfTwos[i - 1];\n            this.powerOfTwos[i] = previousPower.add(previousPower);\n        }\n        return this.powerOfTwos[exponent];\n    }\n}\n/**\n * Represents an exponentiation operation for the provided base, of which exponents are computed and\n * memoized. The results are represented by a `BigIntForMultiplication` which is tailored for\n * multiplication operations by memoizing the power-of-twos. This effectively results in a matrix\n * representation that is lazily computed upon request.\n */\nclass BigIntExponentiation {\n    constructor(base) {\n        this.base = base;\n        this.exponents = [new BigIntForMultiplication(BigInteger.one())];\n    }\n    /**\n     * Compute the value for `this.base^exponent`, resulting in a big integer that is optimized for\n     * further multiplication operations.\n     */\n    toThePowerOf(exponent) {\n        // Compute the results up until the requested exponent, where every value is computed from its\n        // predecessor. This is because `this.base^(exponent - 1)` only has to be multiplied by `base`\n        // to reach `this.base^exponent`.\n        for (let i = this.exponents.length; i <= exponent; i++) {\n            const value = this.exponents[i - 1].multiplyBy(this.base);\n            this.exponents[i] = new BigIntForMultiplication(value);\n        }\n        return this.exponents[exponent];\n    }\n}\n\n/**\n * A lazily created TextEncoder instance for converting strings into UTF-8 bytes\n */\nlet textEncoder;\n/**\n * Return the message id or compute it using the XLIFF1 digest.\n */\nfunction digest(message) {\n    return message.id || computeDigest(message);\n}\n/**\n * Compute the message id using the XLIFF1 digest.\n */\nfunction computeDigest(message) {\n    return sha1(serializeNodes(message.nodes).join('') + `[${message.meaning}]`);\n}\n/**\n * Return the message id or compute it using the XLIFF2/XMB/$localize digest.\n */\nfunction decimalDigest(message) {\n    return message.id || computeDecimalDigest(message);\n}\n/**\n * Compute the message id using the XLIFF2/XMB/$localize digest.\n */\nfunction computeDecimalDigest(message) {\n    const visitor = new _SerializerIgnoreIcuExpVisitor();\n    const parts = message.nodes.map(a => a.visit(visitor, null));\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * @internal\n */\nclass _SerializerVisitor {\n    visitText(text, context) {\n        return text.value;\n    }\n    visitContainer(container, context) {\n        return `[${container.children.map(child => child.visit(this)).join(', ')}]`;\n    }\n    visitIcu(icu, context) {\n        const strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        return `{${icu.expression}, ${icu.type}, ${strCases.join(', ')}}`;\n    }\n    visitTagPlaceholder(ph, context) {\n        return ph.isVoid ?\n            `<ph tag name=\"${ph.startName}\"/>` :\n            `<ph tag name=\"${ph.startName}\">${ph.children.map(child => child.visit(this)).join(', ')}</ph name=\"${ph.closeName}\">`;\n    }\n    visitPlaceholder(ph, context) {\n        return ph.value ? `<ph name=\"${ph.name}\">${ph.value}</ph>` : `<ph name=\"${ph.name}\"/>`;\n    }\n    visitIcuPlaceholder(ph, context) {\n        return `<ph icu name=\"${ph.name}\">${ph.value.visit(this)}</ph>`;\n    }\n}\nconst serializerVisitor = new _SerializerVisitor();\nfunction serializeNodes(nodes) {\n    return nodes.map(a => a.visit(serializerVisitor, null));\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * @internal\n */\nclass _SerializerIgnoreIcuExpVisitor extends _SerializerVisitor {\n    visitIcu(icu, context) {\n        let strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        // Do not take the expression into account\n        return `{${icu.type}, ${strCases.join(', ')}}`;\n    }\n}\n/**\n * Compute the SHA1 of the given string\n *\n * see https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n */\nfunction sha1(str) {\n    textEncoder ?? (textEncoder = new TextEncoder());\n    const utf8 = [...textEncoder.encode(str)];\n    const words32 = bytesToWords32(utf8, Endian.Big);\n    const len = utf8.length * 8;\n    const w = new Uint32Array(80);\n    let a = 0x67452301, b = 0xefcdab89, c = 0x98badcfe, d = 0x10325476, e = 0xc3d2e1f0;\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (let i = 0; i < words32.length; i += 16) {\n        const h0 = a, h1 = b, h2 = c, h3 = d, h4 = e;\n        for (let j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            const fkVal = fk(j, b, c, d);\n            const f = fkVal[0];\n            const k = fkVal[1];\n            const temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            e = d;\n            d = c;\n            c = rol32(b, 30);\n            b = a;\n            a = temp;\n        }\n        a = add32(a, h0);\n        b = add32(b, h1);\n        c = add32(c, h2);\n        d = add32(d, h3);\n        e = add32(e, h4);\n    }\n    // Convert the output parts to a 160-bit hexadecimal string\n    return toHexU32(a) + toHexU32(b) + toHexU32(c) + toHexU32(d) + toHexU32(e);\n}\n/**\n * Convert and format a number as a string representing a 32-bit unsigned hexadecimal number.\n * @param value The value to format as a string.\n * @returns A hexadecimal string representing the value.\n */\nfunction toHexU32(value) {\n    // unsigned right shift of zero ensures an unsigned 32-bit number\n    return (value >>> 0).toString(16).padStart(8, '0');\n}\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nfunction fingerprint(str) {\n    textEncoder ?? (textEncoder = new TextEncoder());\n    const utf8 = textEncoder.encode(str);\n    const view = new DataView(utf8.buffer, utf8.byteOffset, utf8.byteLength);\n    let hi = hash32(view, utf8.length, 0);\n    let lo = hash32(view, utf8.length, 102072);\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\nfunction computeMsgId(msg, meaning = '') {\n    let msgFingerprint = fingerprint(msg);\n    if (meaning) {\n        const meaningFingerprint = fingerprint(meaning);\n        msgFingerprint = add64(rol64(msgFingerprint, 1), meaningFingerprint);\n    }\n    const hi = msgFingerprint[0];\n    const lo = msgFingerprint[1];\n    return wordsToDecimalString(hi & 0x7fffffff, lo);\n}\nfunction hash32(view, length, c) {\n    let a = 0x9e3779b9, b = 0x9e3779b9;\n    let index = 0;\n    const end = length - 12;\n    for (; index <= end; index += 12) {\n        a += view.getUint32(index, true);\n        b += view.getUint32(index + 4, true);\n        c += view.getUint32(index + 8, true);\n        const res = mix(a, b, c);\n        a = res[0], b = res[1], c = res[2];\n    }\n    const remainder = length - index;\n    // the first byte of c is reserved for the length\n    c += length;\n    if (remainder >= 4) {\n        a += view.getUint32(index, true);\n        index += 4;\n        if (remainder >= 8) {\n            b += view.getUint32(index, true);\n            index += 4;\n            // Partial 32-bit word for c\n            if (remainder >= 9) {\n                c += view.getUint8(index++) << 8;\n            }\n            if (remainder >= 10) {\n                c += view.getUint8(index++) << 16;\n            }\n            if (remainder === 11) {\n                c += view.getUint8(index++) << 24;\n            }\n        }\n        else {\n            // Partial 32-bit word for b\n            if (remainder >= 5) {\n                b += view.getUint8(index++);\n            }\n            if (remainder >= 6) {\n                b += view.getUint8(index++) << 8;\n            }\n            if (remainder === 7) {\n                b += view.getUint8(index++) << 16;\n            }\n        }\n    }\n    else {\n        // Partial 32-bit word for a\n        if (remainder >= 1) {\n            a += view.getUint8(index++);\n        }\n        if (remainder >= 2) {\n            a += view.getUint8(index++) << 8;\n        }\n        if (remainder === 3) {\n            a += view.getUint8(index++) << 16;\n        }\n    }\n    return mix(a, b, c)[2];\n}\n// clang-format off\nfunction mix(a, b, c) {\n    a -= b;\n    a -= c;\n    a ^= c >>> 13;\n    b -= c;\n    b -= a;\n    b ^= a << 8;\n    c -= a;\n    c -= b;\n    c ^= b >>> 13;\n    a -= b;\n    a -= c;\n    a ^= c >>> 12;\n    b -= c;\n    b -= a;\n    b ^= a << 16;\n    c -= a;\n    c -= b;\n    c ^= b >>> 5;\n    a -= b;\n    a -= c;\n    a ^= c >>> 3;\n    b -= c;\n    b -= a;\n    b ^= a << 10;\n    c -= a;\n    c -= b;\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n// clang-format on\n// Utils\nvar Endian;\n(function (Endian) {\n    Endian[Endian[\"Little\"] = 0] = \"Little\";\n    Endian[Endian[\"Big\"] = 1] = \"Big\";\n})(Endian || (Endian = {}));\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\nfunction add32to64(a, b) {\n    const low = (a & 0xffff) + (b & 0xffff);\n    const high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\nfunction add64(a, b) {\n    const ah = a[0], al = a[1];\n    const bh = b[0], bl = b[1];\n    const result = add32to64(al, bl);\n    const carry = result[0];\n    const l = result[1];\n    const h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n// Rotate a 32b number left `count` position\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n// Rotate a 64b number left `count` position\nfunction rol64(num, count) {\n    const hi = num[0], lo = num[1];\n    const h = (hi << count) | (lo >>> (32 - count));\n    const l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\nfunction bytesToWords32(bytes, endian) {\n    const size = (bytes.length + 3) >>> 2;\n    const words32 = [];\n    for (let i = 0; i < size; i++) {\n        words32[i] = wordAt(bytes, i * 4, endian);\n    }\n    return words32;\n}\nfunction byteAt(bytes, index) {\n    return index >= bytes.length ? 0 : bytes[index];\n}\nfunction wordAt(bytes, index, endian) {\n    let word = 0;\n    if (endian === Endian.Big) {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(bytes, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (let i = 0; i < 4; i++) {\n            word += byteAt(bytes, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * Create a shared exponentiation pool for base-256 computations. This shared pool provides memoized\n * power-of-256 results with memoized power-of-two computations for efficient multiplication.\n *\n * For our purposes, this can be safely stored as a global without memory concerns. The reason is\n * that we encode two words, so only need the 0th (for the low word) and 4th (for the high word)\n * exponent.\n */\nconst base256 = new BigIntExponentiation(256);\n/**\n * Represents two 32-bit words as a single decimal number. This requires a big integer storage\n * model as JS numbers are not accurate enough to represent the 64-bit number.\n *\n * Based on https://www.danvk.org/hex2dec.html\n */\nfunction wordsToDecimalString(hi, lo) {\n    // Encode the four bytes in lo in the lower digits of the decimal number.\n    // Note: the multiplication results in lo itself but represented by a big integer using its\n    // decimal digits.\n    const decimal = base256.toThePowerOf(0).multiplyBy(lo);\n    // Encode the four bytes in hi above the four lo bytes. lo is a maximum of (2^8)^4, which is why\n    // this multiplication factor is applied.\n    base256.toThePowerOf(4).multiplyByAndAddTo(hi, decimal);\n    return decimal.toString();\n}\n\n// This module specifier is intentionally a relative path to allow bundling the code directly\n/**\n * Parse a `$localize` tagged string into a structure that can be used for translation or\n * extraction.\n *\n * See `ParsedMessage` for an example.\n */\nfunction parseMessage(messageParts, expressions, location, messagePartLocations, expressionLocations = []) {\n    const substitutions = {};\n    const substitutionLocations = {};\n    const associatedMessageIds = {};\n    const metadata = parseMetadata(messageParts[0], messageParts.raw[0]);\n    const cleanedMessageParts = [metadata.text];\n    const placeholderNames = [];\n    let messageString = metadata.text;\n    for (let i = 1; i < messageParts.length; i++) {\n        const { messagePart, placeholderName = computePlaceholderName(i), associatedMessageId } = parsePlaceholder(messageParts[i], messageParts.raw[i]);\n        messageString += `{$${placeholderName}}${messagePart}`;\n        if (expressions !== undefined) {\n            substitutions[placeholderName] = expressions[i - 1];\n            substitutionLocations[placeholderName] = expressionLocations[i - 1];\n        }\n        placeholderNames.push(placeholderName);\n        if (associatedMessageId !== undefined) {\n            associatedMessageIds[placeholderName] = associatedMessageId;\n        }\n        cleanedMessageParts.push(messagePart);\n    }\n    const messageId = metadata.customId || computeMsgId(messageString, metadata.meaning || '');\n    const legacyIds = metadata.legacyIds ? metadata.legacyIds.filter(id => id !== messageId) : [];\n    return {\n        id: messageId,\n        legacyIds,\n        substitutions,\n        substitutionLocations,\n        text: messageString,\n        customId: metadata.customId,\n        meaning: metadata.meaning || '',\n        description: metadata.description || '',\n        messageParts: cleanedMessageParts,\n        messagePartLocations,\n        placeholderNames,\n        associatedMessageIds,\n        location,\n    };\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract the message metadata from the text.\n *\n * If the message part has a metadata block this function will extract the `meaning`,\n * `description`, `customId` and `legacyId` (if provided) from the block. These metadata properties\n * are serialized in the string delimited by `|`, `@@` and `␟` respectively.\n *\n * (Note that `␟` is the `LEGACY_ID_INDICATOR` - see `constants.ts`.)\n *\n * For example:\n *\n * ```ts\n * `:meaning|description@@custom-id:`\n * `:meaning|@@custom-id:`\n * `:meaning|description:`\n * `:description@@custom-id:`\n * `:meaning|:`\n * `:description:`\n * `:@@custom-id:`\n * `:meaning|description@@custom-id␟legacy-id-1␟legacy-id-2:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing any metadata that was parsed from the message part.\n */\nfunction parseMetadata(cooked, raw) {\n    const { text: messageString, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { text: messageString };\n    }\n    else {\n        const [meaningDescAndId, ...legacyIds] = block.split(LEGACY_ID_INDICATOR);\n        const [meaningAndDesc, customId] = meaningDescAndId.split(ID_SEPARATOR, 2);\n        let [meaning, description] = meaningAndDesc.split(MEANING_SEPARATOR, 2);\n        if (description === undefined) {\n            description = meaning;\n            meaning = undefined;\n        }\n        if (description === '') {\n            description = undefined;\n        }\n        return { text: messageString, meaning, description, customId, legacyIds };\n    }\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract any placeholder metadata from the\n * text.\n *\n * If the message part has a metadata block this function will extract the `placeholderName` and\n * `associatedMessageId` (if provided) from the block.\n *\n * These metadata properties are serialized in the string delimited by `@@`.\n *\n * For example:\n *\n * ```ts\n * `:placeholder-name@@associated-id:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing the metadata (`placeholderName` and `associatedMessageId`) of the\n *     preceding placeholder, along with the static text that follows.\n */\nfunction parsePlaceholder(cooked, raw) {\n    const { text: messagePart, block } = splitBlock(cooked, raw);\n    if (block === undefined) {\n        return { messagePart };\n    }\n    else {\n        const [placeholderName, associatedMessageId] = block.split(ID_SEPARATOR);\n        return { messagePart, placeholderName, associatedMessageId };\n    }\n}\n/**\n * Split a message part (`cooked` + `raw`) into an optional delimited \"block\" off the front and the\n * rest of the text of the message part.\n *\n * Blocks appear at the start of message parts. They are delimited by a colon `:` character at the\n * start and end of the block.\n *\n * If the block is in the first message part then it will be metadata about the whole message:\n * meaning, description, id.  Otherwise it will be metadata about the immediately preceding\n * substitution: placeholder name.\n *\n * Since blocks are optional, it is possible that the content of a message block actually starts\n * with a block marker. In this case the marker must be escaped `\\:`.\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns An object containing the `text` of the message part and the text of the `block`, if it\n * exists.\n * @throws an error if the `block` is unterminated\n */\nfunction splitBlock(cooked, raw) {\n    if (raw.charAt(0) !== BLOCK_MARKER$1) {\n        return { text: cooked };\n    }\n    else {\n        const endOfBlock = findEndOfBlock(cooked, raw);\n        return {\n            block: cooked.substring(1, endOfBlock),\n            text: cooked.substring(endOfBlock + 1),\n        };\n    }\n}\nfunction computePlaceholderName(index) {\n    return index === 1 ? 'PH' : `PH_${index - 1}`;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER$1) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\nclass MissingTranslationError extends Error {\n    constructor(parsedMessage) {\n        super(`No translation found for ${describeMessage(parsedMessage)}.`);\n        this.parsedMessage = parsedMessage;\n        this.type = 'MissingTranslationError';\n    }\n}\nfunction isMissingTranslationError(e) {\n    return e.type === 'MissingTranslationError';\n}\n/**\n * Translate the text of the `$localize` tagged-string (i.e. `messageParts` and\n * `substitutions`) using the given `translations`.\n *\n * The tagged-string is parsed to extract its `messageId` which is used to find an appropriate\n * `ParsedTranslation`. If this doesn't match and there are legacy ids then try matching a\n * translation using those.\n *\n * If one is found then it is used to translate the message into a new set of `messageParts` and\n * `substitutions`.\n * The translation may reorder (or remove) substitutions as appropriate.\n *\n * If there is no translation with a matching message id then an error is thrown.\n * If a translation contains a placeholder that is not found in the message being translated then an\n * error is thrown.\n */\nfunction translate$1(translations, messageParts, substitutions) {\n    const message = parseMessage(messageParts, substitutions);\n    // Look up the translation using the messageId, and then the legacyId if available.\n    let translation = translations[message.id];\n    // If the messageId did not match a translation, try matching the legacy ids instead\n    if (message.legacyIds !== undefined) {\n        for (let i = 0; i < message.legacyIds.length && translation === undefined; i++) {\n            translation = translations[message.legacyIds[i]];\n        }\n    }\n    if (translation === undefined) {\n        throw new MissingTranslationError(message);\n    }\n    return [\n        translation.messageParts, translation.placeholderNames.map(placeholder => {\n            if (message.substitutions.hasOwnProperty(placeholder)) {\n                return message.substitutions[placeholder];\n            }\n            else {\n                throw new Error(`There is a placeholder name mismatch with the translation provided for the message ${describeMessage(message)}.\\n` +\n                    `The translation contains a placeholder with name ${placeholder}, which does not exist in the message.`);\n            }\n        })\n    ];\n}\n/**\n * Parse the `messageParts` and `placeholderNames` out of a target `message`.\n *\n * Used by `loadTranslations()` to convert target message strings into a structure that is more\n * appropriate for doing translation.\n *\n * @param message the message to be parsed.\n */\nfunction parseTranslation(messageString) {\n    const parts = messageString.split(/{\\$([^}]*)}/);\n    const messageParts = [parts[0]];\n    const placeholderNames = [];\n    for (let i = 1; i < parts.length - 1; i += 2) {\n        placeholderNames.push(parts[i]);\n        messageParts.push(`${parts[i + 1]}`);\n    }\n    const rawMessageParts = messageParts.map(part => part.charAt(0) === BLOCK_MARKER$1 ? '\\\\' + part : part);\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, rawMessageParts),\n        placeholderNames,\n    };\n}\n/**\n * Create a `ParsedTranslation` from a set of `messageParts` and `placeholderNames`.\n *\n * @param messageParts The message parts to appear in the ParsedTranslation.\n * @param placeholderNames The names of the placeholders to intersperse between the `messageParts`.\n */\nfunction makeParsedTranslation(messageParts, placeholderNames = []) {\n    let messageString = messageParts[0];\n    for (let i = 0; i < placeholderNames.length; i++) {\n        messageString += `{$${placeholderNames[i]}}${messageParts[i + 1]}`;\n    }\n    return {\n        text: messageString,\n        messageParts: makeTemplateObject(messageParts, messageParts),\n        placeholderNames\n    };\n}\n/**\n * Create the specialized array that is passed to tagged-string tag functions.\n *\n * @param cooked The message parts with their escape codes processed.\n * @param raw The message parts with their escaped codes as-is.\n */\nfunction makeTemplateObject(cooked, raw) {\n    Object.defineProperty(cooked, 'raw', { value: raw });\n    return cooked;\n}\nfunction describeMessage(message) {\n    const meaningString = message.meaning && ` - \"${message.meaning}\"`;\n    const legacy = message.legacyIds && message.legacyIds.length > 0 ?\n        ` [${message.legacyIds.map(l => `\"${l}\"`).join(', ')}]` :\n        '';\n    return `\"${message.id}\"${legacy} (\"${message.text}\"${meaningString})`;\n}\n\n/**\n * Load translations for use by `$localize`, if doing runtime translation.\n *\n * If the `$localize` tagged strings are not going to be replaced at compiled time, it is possible\n * to load a set of translations that will be applied to the `$localize` tagged strings at runtime,\n * in the browser.\n *\n * Loading a new translation will overwrite a previous translation if it has the same `MessageId`.\n *\n * Note that `$localize` messages are only processed once, when the tagged string is first\n * encountered, and does not provide dynamic language changing without refreshing the browser.\n * Loading new translations later in the application life-cycle will not change the translated text\n * of messages that have already been translated.\n *\n * The message IDs and translations are in the same format as that rendered to \"simple JSON\"\n * translation files when extracting messages. In particular, placeholders in messages are rendered\n * using the `{$PLACEHOLDER_NAME}` syntax. For example the message from the following template:\n *\n * ```html\n * <div i18n>pre<span>inner-pre<b>bold</b>inner-post</span>post</div>\n * ```\n *\n * would have the following form in the `translations` map:\n *\n * ```ts\n * {\n *   \"2932901491976224757\":\n *      \"pre{$START_TAG_SPAN}inner-pre{$START_BOLD_TEXT}bold{$CLOSE_BOLD_TEXT}inner-post{$CLOSE_TAG_SPAN}post\"\n * }\n * ```\n *\n * @param translations A map from message ID to translated message.\n *\n * These messages are processed and added to a lookup based on their `MessageId`.\n *\n * @see `clearTranslations()` for removing translations loaded using this function.\n * @see `$localize` for tagging messages as needing to be translated.\n * @publicApi\n */\nfunction loadTranslations(translations) {\n    // Ensure the translate function exists\n    if (!$localize.translate) {\n        $localize.translate = translate;\n    }\n    if (!$localize.TRANSLATIONS) {\n        $localize.TRANSLATIONS = {};\n    }\n    Object.keys(translations).forEach(key => {\n        $localize.TRANSLATIONS[key] = parseTranslation(translations[key]);\n    });\n}\n/**\n * Remove all translations for `$localize`, if doing runtime translation.\n *\n * All translations that had been loading into memory using `loadTranslations()` will be removed.\n *\n * @see `loadTranslations()` for loading translations at runtime.\n * @see `$localize` for tagging messages as needing to be translated.\n *\n * @publicApi\n */\nfunction clearTranslations() {\n    $localize.translate = undefined;\n    $localize.TRANSLATIONS = {};\n}\n/**\n * Translate the text of the given message, using the loaded translations.\n *\n * This function may reorder (or remove) substitutions as indicated in the matching translation.\n */\nfunction translate(messageParts, substitutions) {\n    try {\n        return translate$1($localize.TRANSLATIONS, messageParts, substitutions);\n    }\n    catch (e) {\n        console.warn(e.message);\n        return [messageParts, substitutions];\n    }\n}\n\n// Always use __globalThis if available, which is the spec-defined global variable across all\n// environments, then fallback to __global first, because in Node tests both __global and\n// __window may be defined and _global should be __global in that case. Note: Typeof/Instanceof\n// checks are considered side-effects in Terser. We explicitly mark this as side-effect free:\n// https://github.com/terser/terser/issues/250.\nconst _global = ( /* @__PURE__ */(() => (typeof globalThis !== 'undefined' && globalThis) ||\n    (typeof global !== 'undefined' && global) || (typeof window !== 'undefined' && window) ||\n    (typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self))());\n\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular i18n guide](guide/i18n-common-prepare#mark-text-in-component-template).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n *\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n *\n * @globalApi\n * @publicApi\n */\nconst $localize$1 = function (messageParts, ...expressions) {\n    if ($localize$1.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize$1.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n\n// This file exports all the `utils` as private exports so that other parts of `@angular/localize`\n\n// This file contains the public API of the `@angular/localize` entry-point\n\n// DO NOT ADD public exports to this file.\n\nexport { clearTranslations, loadTranslations, $localize$1 as ɵ$localize, MissingTranslationError as ɵMissingTranslationError, _global as ɵ_global, computeMsgId as ɵcomputeMsgId, findEndOfBlock as ɵfindEndOfBlock, isMissingTranslationError as ɵisMissingTranslationError, makeParsedTranslation as ɵmakeParsedTranslation, makeTemplateObject as ɵmakeTemplateObject, parseMessage as ɵparseMessage, parseMetadata as ɵparseMetadata, parseTranslation as ɵparseTranslation, splitBlock as ɵsplitBlock, translate$1 as ɵtranslate };\n","/**\n * @license Angular v15.2.8\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵ_global, ɵ$localize } from '@angular/localize';\nexport { ɵ$localize as $localize } from '@angular/localize';\n\n// Attach $localize to the global context, as a side-effect of this module.\nɵ_global.$localize = ɵ$localize;\n","'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"],"x_google_ignoreList":[0,1,2]}